#define BLYNK_PRINT Serial
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <SimpleTimer.h>

char auth[] = "6ljgjo0TkL2uD4B2eBRHKW3fyle7qorU";
char ssid[] = "Prashanth";
char pass[] = "hot spot";

SimpleTimer timer;
int vs = D0; // vibration sensor 
int data = 0; // sensor data will be stored in this variable.

void myTimerEvent()
{
  // You can send any value at any time.
  // Please don't send more that 10 values per second.
  Blynk.virtualWrite(V1, millis() / 1000);
  /* The millis() function returns the current time in milliseconds (1/1000th of a second) from when you powered up the board (or reset it). 
  It gives you a way of measuring time from within your program*/
}

void setup()
{
  Serial.begin(9600);
  pinMode(vs ,INPUT); 
  Blynk.begin(auth, ssid, pass);
  timer.setInterval(1000L,sensorvalue); 
  //should run every 1000 milliseconds, (which is 1 second). 
}

void loop()
{
  Blynk.run();
  timer.run();
}

void sensorvalue()
{
  long measurement =vibration();
  Serial.println(measurement);
 if ( measurement==0 ){
  data=0;
   Blynk.virtualWrite(V0, data);
 }
 if( 0 < measurement < 500){
   data=1;
   Blynk.virtualWrite(V0, data);
 }
 if( 500 <= measurement < 1000){
   data=2;
   Blynk.virtualWrite(V0, data);
 }
 if( 1000 <= measurement < 1500){
   data=3;
   Blynk.virtualWrite(V0, data);
 }
 if( 1500 <= measurement < 2000){
   data=4;
   Blynk.virtualWrite(V0, data);
 }
 if( measurement >= 4000) {
   data=5;
   Blynk.notify("Harmful Bass Level!!");
   Blynk.virtualWrite(V0, data);
 }
 //Blynk.virtualWrite(V0, data); 
}

long vibration(){
  long measurement=pulseIn (vs, HIGH);  //wait for the pin to go HIGH and returns measurement
  return measurement;
}
